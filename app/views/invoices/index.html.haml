%h1= @title
.btn.pull-right= link_to 'Sync with Xero', params.merge(sync: true)
%br
- if params[:type] == 'receivable' 
	= link_to "Payable Invoices", invoices_all_path('payable')
- else
	= link_to "Receivable Invoices", invoices_all_path('receivable')
%br
%div{id: "highChartContainer", min_width:"400px", height:"400px"}
%br
/ .well.well-large
/ 	%table.table
/ 		%tbody
/ 			%tr
/ 				- @due_totals.keys.each do |k|
/ 					%th= k.titleize
/ 			%tr 
/ 				- @due_totals.values.each do |v|
/ 					%td= number_with_precision(v, precision: 2)		
%br
%ul.nav.nav-tabs
	%li{ class: ('active' unless params[:status]) }= link_to "All", invoices_all_path(params[:type])
	- Invoice::STATUSES.each do |s|
		%li{ class: ('active' if params[:status] == s) }= link_to s.capitalize, invoices_path(params[:type], s)

%br
%table.table.table-striped
	%tbody
		%tr
			%th= sortable "invoice_type", "Type"
			%th= sortable "contact_name", "To"
			%th= sortable "due_date"
			%th= sortable "paid"
			%th= sortable "due"

		- @invoices.each do |i| 
			%tr
				%td= i.invoice_type				
				%td= i.contact_name
				%td{ class: ('due' if Date.today > i.due_date)}= i.due_date
				%td= number_with_precision(i.paid, precision: 2)		
				%td= number_with_precision(i.due, precision: 2)


:javascript
	chart = new Highcharts.Chart({
		chart: {
			renderTo: 'highChartContainer',
			plotBackgroundColor: null,
			plotBorderWidth: null,
			plotShadow: false,
			type: 'bar'
		},
		title: {
			text: 'Potential #{params[:type].titleize}'
		},

		xAxis: {
			categories: ['Value']
		},		

		plotOptions: {
			series: {
				stacking: 'normal'
			}
		},

		legend: {
			backgroundColor: '#FFFFFF',
			reversed: true
		},		

		series: [{
			name: 'Draft',
			data: [#{number_with_precision(@due_totals['draft'], precision: 2)}]	
		}, {
			name: 'Submitted',
			data: [#{number_with_precision(@due_totals['submitted'], precision: 2)}]	     
		}, {
			name: 'Authorised NotDue',
			data: [#{number_with_precision(@due_totals['authorised']-@due_totals['authorised overdue'], precision: 2)}]	     
		}, {
			name: 'Authorised OverDue',
			data: [#{number_with_precision(@due_totals['authorised overdue'], precision: 2)}]	     
		}//, {
			//name: 'Authorised Paid',
			//data: [#{number_with_precision(@due_totals['paid'], precision: 2)}]	     
		//}

		]

	});
